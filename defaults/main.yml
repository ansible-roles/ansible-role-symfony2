---

# Ownership strategies:
# 0. Do nothing
# Note that there are not allowed to use `app/console` from bash as non-`symfony2_owner` user.
# Because it may generate cache with `symfony2_owner` owner and your apache will fail wo work
# with site. This probably ok on production where all console operations performs via cron with
# `symfony2_owner` user.
#
# For example:
# '* * * * * www-data {{ symfony2_php_path }} {{ symfony2_current_root }}/app/console --env={{ symfony2_environment }} symfony2:console:command'
symfony2_ownership: none

# 1. Uncomments `umask` at app/console and web/app.php
# Unavailable when `symfony2_deploy_strategy` is git, mercurial or svn
# and `symfony2_release` != '' (in other words works only
# when symfony2_release == '' or `symfony2_deploy_strategy` is 'rsync')
#
# Warning: Unsupported at this time
# It just reserved for future implementation
# symfony2_ownership: umask

# 2. Use `setfacl`
# symfony2_ownership: setfacl

# 3. Use `chmod +a`
# symfony2_ownership: chmod+a

symfony2_owner: www-data
symfony2_group: www-data

symfony2_environment: prod

# When `symfony2_release` is empty,
# next variable is used to generate
# value for `symfony2_release`.
#
# This value is passed to `date` utility.
# See http://unixhelp.ed.ac.uk/CGI/man-cgi?date
# for more information about format.
symfony2_release_format: "%Y%m%d_%H%M%S"

# Regexp to match releases
#
# Used to filter releases list at `cleanup.yml`.
#
# Tune it respectively when `symfony2_release_format`
# changed or when you fill `symfony2_release`
# with non-numeric value.
symfony2_release_regexp: "[0-9_]{15}"


# Release name
# 1. Leave blank for automatic release name generation
#
# Each time you run this role, new version will
# be generated and your application will be installed
# in new release location each time.
#
# So you can rollback to old release if some problems
# with new release will be found.
symfony2_release: ''

# 2. Define your value
# Don't forget to review `symfony2_release_regexp`
# if you use non-numeric release names
# symfony2_release: 123


# How many releases will be saved
# 1. Do not delete any releases
symfony2_releases: 0

# 2: Delete all releases except last
# Danger! This behavior is not recommended!
# You can't rollback to previous release as
# it will be deleted immediately after new
# release succesfull deployed
# symfony2_releases: 1

# 3. Delete all releases except latest X
# In exemple below, only latest 3 releases
# will be saved.
# symfony2_releases: 3

# Application name
symfony2_name: symfony
symfony2_root: "/var/www/{{ symfony2_name }}"


# Deploy strategies:
# 1. Git strategy
symfony2_deploy_strategy: git
symfony2_branch: master
symfony2_repo: https://github.com/symfony/symfony-standard.git
symfony2_repo_depth: 1
symfony2_key_file: '~/.ssh/id_rsa'

# 2. Mercurial strategy
# symfony2_deploy_strategy: mercurial
# symfony2_branch: master
# symfony2_repo: ...

# 3. SVN strategy
# symfony2_deploy_strategy: svn
# symfony2_svn_revision: 1
# symfony2_repo: ...

# 4. Rsync strategy
# symfony2_deploy_strategy: rsync
# symfony2_local_root: /var/www/local-symfony2-application/
symfony2_rsync_options: --exclude=.git,--exclude=vendor,--exclude=web/vendor,--exclude=app/logs,--exclude=app/cache

# Path to php interpreter
symfony2_php_path: /usr/bin/php


# When you use composer, you may need
# increased memory_limit or max_execution_time for php.
#
# Good practice is to have separate php.ini for cli
# with proper limits.
#
# But if you need custom limits per each role run,
# or you need to pass any other arguments to php
# when running composer, you may use next parameter.
#
# 0. No extra arguments passed to php when run composer
# symfony2_php_args: ''

# 1. Use unlimited memory
symfony2_php_args: '-d memory_limit=-1'

# 2. Unlimited memory limit and execution time
# symfony2_php_args: '-d memory_limit=-1 -d max_execution_time=0'


# Composer installation
# 1. If you installing composer with another role,
# you just need define path to composer:
# symfony2_composer_path: '/path/to/composer.phar'
# or
# symfony2_composer_path: '/usr/local/bin/composer'

# 2. Another way, leave blank next variable
# for downloading composer.phar just into symfony2_root
symfony2_composer_path: ''


symfony2_composer_options: "--no-interaction"


# php app/console options
symfony2_console_options: "--no-interaction"


# Console commands to run after installation
# 1. No commands
symfony2_console_commands: false

# 2. Specified commands
# symfony2_console_commands:
#   - "assetic:dump"
#   - "doctrine:migrations:migrate -n"


# Database parameters
symfony2_database_driver: pdo_mysql
symfony2_database_host: "127.0.0.1"
symfony2_database_port: "3306"
symfony2_database_name: "{{ symfony2_name }}"
symfony2_database_user: "{{ symfony2_name }}"
symfony2_database_password: "{{ symfony2_name }}"


# Parameters file update
# 1. Regenerate/rewrite parameters file EVEN if exists
# symfony2_parameters_update: true

# 2. Do not update parameters file if exists
symfony2_parameters_update: false


# Extensions for parameters file
# 1. Yaml
symfony2_parameters_extension: yml

# 2. INI
# symfony2_parameters_extension: ini

# 3. PHP
# symfony2_parameters_extension: php


# Shared directories
# Relative to the project root.
# Directories will be moved from `symfony2_release_root` to `symfony2_shared_root`.
# Absent dirs will be created under `symfony2_shared_root`.
# Soft links will be created from `symfony2_release_root` to `symfony2_shared_root`.
symfony2_shared_dirs:
  - web/uploads # current/web/uploads -> shared/web/uploads
  - app/logs    # current/app/logs    -> shared/app/logs


# Parameters for parameters file generation
symfony2_parameters:
  database_driver: "{{ symfony2_database_driver }}"
  database_host: "{{ symfony2_database_host }}"
  database_port: "{{ symfony2_database_port }}"
  database_name: "{{ symfony2_database_name }}"
  database_user: "{{ symfony2_database_user }}"
  database_password: "{{ symfony2_database_password }}"
  mailer_transport: smtp
  mailer_host: 127.0.0.1
  mailer_user: null
  mailer_password: null
  secret: "{{ symfony2_name }}"
  locale: en
